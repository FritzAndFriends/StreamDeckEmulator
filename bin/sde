#!/usr/bin/env node

var _ = require('lodash');
var Chalk = require('chalk');
var Cli = require('structured-cli');
var Updates = require('update-notifier');
var Package = require('../package.json');

// Check latest version on npm
// and notify user if newer version
// is available.
Updates({ pkg: Package }).notify();

var cli = Cli.createApp({
    description: Package.description,
    version: Package.version,
    epilog: Chalk.underline('Sample usage:') + '\n'
});

cli.addChild(require('./run'));

Cli.run(cli)
    // Code: 1
    .catch(_.matchesProperty('code', 'E_CANCELLED'), function (err) {
        console.error(err.message);

        process.exit(1);
    })
    // Code: 2
    .catch(_.matchesProperty('code', 'E_INVALID'), function (err) {
        console.error(err.parser.formatUsage());
        console.error(Chalk.red(err.message));

        process.exit(2);
    })
    // Code: 3
    .catch(_.matchesProperty('code', 'E_HINT'), function (err) {
        console.error(err.message);

        process.exit(3);
    })
    // Code: 4
    .catch(_.matchesProperty('code', 'E_TIMEOUT'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(4);
    })
    // Code: 5
    .catch(_.matchesProperty('code', 'E_NOTFOUND'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(5);
    })
    // Code: 6
    .catch(_.matchesProperty('code', 'E_BADREQUEST'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(6);
    })
    // Code: 7
    .catch(_.matchesProperty('code', 'E_SERVERERROR'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(7);
    })
    // Code: 8
    .catch(_.matchesProperty('code', 'E_NOTAUTHORIZED'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(8);
    })
    // Code: 99
    .catch(function (err) {
        console.error(Chalk.red('Uncaught error: ', err.message));
        console.error(err.stack);
        console.error('Please report this at: https://github.com/FritzAndFriends/StreamDeckEmulator/issues');

        process.exit(99);
    })
    .then(function () {
        process.exit(0);
    });